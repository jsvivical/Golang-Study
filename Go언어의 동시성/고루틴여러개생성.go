package main

import (
	"flag"
	"fmt"
	"time"
)

func main() {
	n := flag.Int("n", 100, "Number of goroutines")
	flag.Parse()
	count := *n
	fmt.Printf("Goint to create %d goroutines.\n", count)

	for i := 0; i < count; i++ {
		go func(x int) {
			fmt.Printf("%3d", x)
		}(i)
	}
	time.Sleep(time.Second)
	fmt.Println("\nExiting...")
}

/**************************************************************************************************************************************
 * 결과를 보면 비결정론적으로 순서가 뒤엉켜 원하는 값을 확인하기 힘들게 출력됨
 * time.Sleep()메소드는 지정한 지연 시간이 적절하지 않으면 고루틴의 결과를 보지 못할 수도 있다.
 * 프로그램이 복잡해지면 코드가 지저분해지고 찾기 힘든 버그가 발생할 가능성이 높음
***************************************************************************************************************************************/
